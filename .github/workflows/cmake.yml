name: CMake

on:
  pull_request:
    branches: [ "main" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build_nvidia_sdk:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        mini-app: ['heat3d', 'heat3d_mpi', 'vlp4d', 'vlp4d_mpi']
        programmind-model: ['OPENMP', 'OPENACC', 'STDPAR']

    steps:
    - uses: actions/checkout@v3

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: > 
        docker-compose run nvidia_sdk_env cmake -B build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DCMAKE_CXX_COMPILER=nvc++
        -DBUILD_TESTING=OFF -DPROGRAMMING_MODEL=${{ matrix.programmind_model }} -DBACKEND=CUDA -DAPPLICATION=${{ matrix.mini-app }}

    - name: Build
      # Build your program with the given configuration
      run: docker-compose run nvidia_sdk_env cmake --build build --config ${{env.BUILD_TYPE}}
