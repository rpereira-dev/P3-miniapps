add_library(math_lib INTERFACE)

if(BACKEND STREQUAL "CUDA")
    find_package(OpenACC REQUIRED)
    find_package(CUDAToolkit COMPONENTS cufft)
    if(CUDAToolkit_FOUND)
        target_compile_options(math_lib INTERFACE -O3 -mcmodel=medium -fast)
        target_link_libraries(math_lib INTERFACE std::mdspan OpenACC::OpenACC_CXX CUDA::cufft CUDA::cublas)
    else()
        target_compile_options(math_lib INTERFACE -O3 -mcmodel=medium -fast -cudalib=cufft,cublas)
        target_link_libraries(math_lib INTERFACE std::mdspan OpenACC::OpenACC_CXX -cudalib=cufft,cublas)
    endif()

    # Macro
    target_compile_definitions(math_lib INTERFACE ENABLE_OPENACC)
elseif(BACKEND STREQUAL "OPENMP")
    find_package(OpenMP REQUIRED)
    find_package(FFTW REQUIRED COMPONENTS DOUBLE_LIB)
    target_compile_options(math_lib INTERFACE -O3)
    target_link_libraries(math_lib INTERFACE std::mdspan OpenMP::OpenMP_CXX fftw3)
else()
    message(FATAL_ERROR "No parallel backend specified. One of CUDA and OPENMP must be On.")
endif()

target_include_directories(math_lib INTERFACE ${CMAKE_CURRENT_SOURCE_DIR})
